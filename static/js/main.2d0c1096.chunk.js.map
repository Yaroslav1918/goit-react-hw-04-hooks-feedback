{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styled.js","components/Notification/Notification.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/Section/Section.js","Style/globalStyles.js","components/App/App.js","index.js"],"names":["FeedbackButton","styled","button","ListButton","ul","ListItem","li","FeedbackOptions","options","onLeaveFeedback","map","item","index","type","onClick","Wrapper","section","SectionTitle","h1","Paragraph","p","Notification","message","StatList","StatItem","StatTitle","h2","StatParagraph","Statistics","goodValue","neutralValue","badValue","positivePercentage","total","Section","title","children","GlobalStyle","createGlobalStyle","App","state","good","neutral","bad","setValue","key","setState","countPositiveFeedbackPercentage","countTotalFeedback","Math","trunc","Object","values","reduce","acc","value","keys","this","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAEaA,EAAiBC,IAAOC,OAAV,stBAgCdC,EAAaF,IAAOG,GAAV,sGAMVC,EAAWJ,IAAOK,GAAV,0B,OCVNC,EAtBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACE,cAACN,EAAD,UACGK,EAAQE,KAAI,SAACC,EAAMC,GAAP,OACX,cAACP,EAAD,UACE,cAACL,EAAD,CACEa,KAAK,SACLC,QAAS,WACPL,EAAgBE,IAHpB,SAMGA,KAPUC,WCXVG,EAAUd,IAAOe,QAAV,0BACPC,EAAehB,IAAOiB,GAAV,0BACZC,EAAYlB,IAAOmB,EAAV,0BCOPC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,eAACH,EAAD,eAAaG,MCFtCC,EAAWtB,IAAOG,GAAV,0BACRoB,EAAWvB,IAAOK,GAAV,0BACRmB,EAAYxB,IAAOyB,GAAV,0BACTC,EAAgB1B,IAAOmB,EAAV,0BCiDXQ,EA5CI,SAAC,GAAD,IACjBC,EADiB,EACjBA,UACAC,EAFiB,EAEjBA,aACAC,EAHiB,EAGjBA,SACAC,EAJiB,EAIjBA,mBACAC,EALiB,EAKjBA,MALiB,OAOjB,qCACE,cAACR,EAAD,yBAECQ,GAAS,EACR,eAACV,EAAD,WACE,cAACC,EAAD,UACE,eAACG,EAAD,mBAAqBE,EAArB,SAEF,cAACL,EAAD,UACE,eAACG,EAAD,sBAAwBG,OAE1B,cAACN,EAAD,UACE,eAACG,EAAD,kBAAoBI,OAEtB,cAACP,EAAD,UACE,eAACG,EAAD,oBAAsBM,OAExB,cAACT,EAAD,UACE,eAACG,EAAD,gCAEiB,IAAdE,EAAkB,EAAIG,EAFzB,YAOJ,cAAC,EAAD,CAAcV,QAAQ,6BC7BbY,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACrB,EAAD,WACE,eAACE,EAAD,eAAgBkB,EAAhB,OACCC,MCUUC,EAdKC,YAAH,6ZCIXC,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,SAAW,SAACC,GACV,EAAKC,UAAS,SAACN,GAAD,sBACXK,EAAML,EAAMK,GAAO,O,EAIxBE,gCAAkC,WAChC,IAAQN,EAAS,EAAKD,MAAdC,KACFR,EAAQ,EAAKe,qBACnB,OAAOC,KAAKC,MAAc,IAAPT,EAAcR,I,EAGnCe,mBAAqB,WACnB,IAAMR,EAAQ,EAAKA,MACnB,OAAOW,OAAOC,OAAOZ,GAAOa,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,4CAGlE,WACE,IAAMf,EAAQW,OAAOK,KAAKC,KAAKjB,OAC/B,EAA+BiB,KAAKjB,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBV,EAAQwB,KAAKT,qBACbU,EAA6BD,KAAKV,kCACxC,OACE,qCACE,cAAC,EAAD,IACA,eAAC,EAAD,CAASZ,MAAM,uBAAf,UACE,cAAC,EAAD,CAAiB1B,gBAAiBgD,KAAKb,SAAUpC,QAASgC,IAE1D,cAAC,EAAD,CACEX,UAAWY,EACXX,aAAcY,EACdX,SAAUY,EACVH,MAAOA,EACPR,mBAAoB0B,EACpBzB,MAAOA,c,GAzCD0B,aAiDHpB,ICnDfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d0c1096.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FeedbackButton = styled.button`\r\n  display: inline-block;\r\n  padding: 0 25px;\r\n  outline: none;\r\n  border: 1px solid #fff;\r\n  border-radius: 50px;\r\n  height: 46px;\r\n  line-height: 46px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: #444;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\r\n  cursor: pointer;\r\n  transition: box-shadow 0.2s;\r\n  &:focus-visible {\r\n    border: 1px solid #4c51f9;\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    transition: all 0.2s;\r\n    box-shadow: 0 7px 14px rgb(65 132 144 / 10%), 0 3px 6px rgb(0 0 0 / 8%);\r\n  }\r\n  &:active {\r\n    background-color: #1e90ff;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\nexport const ListButton = styled.ul`\r\n  display: flex;\r\n  & li:not(last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nexport const ListItem = styled.li``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FeedbackButton,\r\n  ListButton,\r\n  ListItem,\r\n} from \"../FeedbackOptions/FeedbackOptions.styled\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    <ListButton>\r\n      {options.map((item, index) => (\r\n        <ListItem key={index}>\r\n          <FeedbackButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onLeaveFeedback(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </FeedbackButton>\r\n        </ListItem>\r\n      ))}\r\n    </ListButton>\r\n  </>\r\n);\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\nexport const Wrapper = styled.section``;\r\nexport const SectionTitle = styled.h1``;\r\nexport const Paragraph = styled.p``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paragraph } from \"../Section/Section.styled\";\r\n\r\nconst Notification = ({ message }) => <Paragraph> {message}</Paragraph>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatList = styled.ul``;\r\nexport const StatItem = styled.li``;\r\nexport const StatTitle = styled.h2``;\r\nexport const StatParagraph = styled.p``;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  StatList,\r\n  StatItem,\r\n  StatTitle,\r\n  StatParagraph,\r\n} from \"../Statistics/Statistics.styled\";\r\n\r\nconst Statistics = ({\r\n  goodValue,\r\n  neutralValue,\r\n  badValue,\r\n  positivePercentage,\r\n  total,\r\n}) => (\r\n  <>\r\n    <StatTitle>Statistics</StatTitle>\r\n\r\n    {total >= 1 ? (\r\n      <StatList>\r\n        <StatItem>\r\n          <StatParagraph>Good:{goodValue} </StatParagraph>\r\n        </StatItem>\r\n        <StatItem>\r\n          <StatParagraph>Neutral:{neutralValue}</StatParagraph>\r\n        </StatItem>\r\n        <StatItem>\r\n          <StatParagraph>Bad:{badValue}</StatParagraph>\r\n        </StatItem>\r\n        <StatItem>\r\n          <StatParagraph>Total:{total}</StatParagraph>\r\n        </StatItem>\r\n        <StatItem>\r\n          <StatParagraph>\r\n            Positive feedback:\r\n            {goodValue === 0 ? 0 : positivePercentage}%\r\n          </StatParagraph>\r\n        </StatItem>\r\n      </StatList>\r\n    ) : (\r\n      <Notification message=\"There is no feedback\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  goodValue: PropTypes.number.isRequired,\r\n  badValue: PropTypes.number.isRequired,\r\n  neutralValue: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import { Wrapper, SectionTitle } from \"../Section/Section.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Wrapper>\r\n    <SectionTitle> {title} </SectionTitle>\r\n    {children}\r\n  </Wrapper>\r\n);\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.array.isRequired,\r\n};\r\nexport default Section;\r\n","import { createGlobalStyle } from 'styled-components';\r\n \r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n  background-color: #dfdbe5;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239C92AC' fill-opacity='0.4' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\");\r\n  margin-left: 40px;\r\n  }\r\n\r\nul {\r\n  list-style: none;\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n`;\r\n \r\nexport default GlobalStyle;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions\";\r\nimport Statistics from \"../Statistics\";\r\nimport Section from \"../Section\";\r\nimport GlobalStyle from \"../../Style/globalStyles\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  setValue = (key) => {\r\n    this.setState((state) => ({\r\n      [key]: state[key] + 1,\r\n    }));\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return Math.trunc((good * 100) / total);\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const state = this.state;\r\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  render() {\r\n    const state = Object.keys(this.state);\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <Section title=\"Please live feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.setValue} options={state} />\r\n\r\n          <Statistics\r\n            goodValue={good}\r\n            neutralValue={neutral}\r\n            badValue={bad}\r\n            state={state}\r\n            positivePercentage={positiveFeedbackPercentage}\r\n            total={total}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}